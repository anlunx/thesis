@article{melicher20, title={Bounded Abstract Effects: Applications to Security},  author={Melicher, Darya and Xu, Anlun and Aldrich, Jonathan, and Potanin, Alex and Zhao Valerie}, year={2020}}


@article{brachthauser20, title={Effekt: Capability-passing style for type- and effect-safe, extensible effect handlers in Scala}, volume={30}, DOI={10.1017/S0956796820000027}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={BRACHTHÄUSER, JONATHAN IMMANUEL and SCHUSTER, PHILIPP and OSTERMANN, KLAUS}, year={2020}, pages={e8}}



@article{mitchell88, author = {Mitchell, John C. and Plotkin, Gordon D.}, title = {Abstract Types Have Existential Type}, year = {1988}, issue_date = {July 1988}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, volume = {10}, number = {3}, issn = {0164-0925}, url = {https://doi.org/10.1145/44501.45065}, doi = {10.1145/44501.45065}, abstract = {Abstract data type declarations appear in typed programming languages like Ada, Alphard, CLU and ML. This form of declaration binds a list of identifiers to a type with associated operations, a composite “value” we call a data algebra. We use a second-order typed lambda calculus SOL to show how data algebras may be given types, passed as parameters, and returned as results of function calls. In the process, we discuss the semantics of abstract data type declarations and review a connection between typed programming languages and constructive logic.}, journal = {ACM Trans. Program. Lang. Syst.}, month = jul, pages = {470–502}, numpages = {33} }

@INPROCEEDINGS{moggi89,
  author={E. {Moggi}},
  booktitle={[1989] Proceedings. Fourth Annual Symposium on Logic in Computer Science}, 
  title={Computational lambda-calculus and monads}, 
  year={1989},
  volume={},
  number={},
  pages={14-23},
  doi={10.1109/LICS.1989.39155}
  }
  
  
@article{levy03,
author = {Levy, Paul and Power, John and Thielecke, Hayo},
year = {2003},
month = {08},
pages = {},
title = {Modelling Environments in Call-By-Value Programming Languages},
volume = {185},
journal = {Information and Computation},
doi = {10.1016/S0890-5401(03)00088-9}
}

@article{grossman00, author = {Grossman, Dan and Morrisett, Greg and Zdancewic, Steve}, title = {Syntactic Type Abstraction}, year = {2000}, issue_date = {Nov. 2000}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, volume = {22}, number = {6}, issn = {0164-0925}, url = {https://doi.org/10.1145/371880.371887}, doi = {10.1145/371880.371887}, abstract = {Software developers often structure programs in such a way that different pieces of code constitute distinct principals. Types help define the protocol by which these principals interact. In particular, abstract types allow a principal to make strong assumptions about how well-typed clients use the facilities that it provides. We show how the notions of principals and type abstraction can be formalized within a language. Different principals can know the implementation of different abstract types. We use additional syntax to track the flow of values with abstract types during the evaluation of a program and demonstrate how this framework supports syntactic proofs (in the sytle of subject reduction) for type-abstraction properties. Such properties have traditionally required semantic arguments; using syntax aboids the need to build a model and recursive typesfor the language. We present various typed lambda calculi with principals, including versions that have mutable state and recursive types.}, journal = {ACM Trans. Program. Lang. Syst.}, month = nov, pages = {1037–1080}, numpages = {44}, keywords = {parametricity, operational semantics, syntactic proofs, proof techniques, type abstraction} }
 



@inproceedings{schrijvers19, author = {Schrijvers, Tom and Pir\'{o}g, Maciej and Wu, Nicolas and Jaskelioff, Mauro}, title = {Monad Transformers and Modular Algebraic Effects: What Binds Them Together}, year = {2019}, isbn = {9781450368131}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, url = {https://doi.org/10.1145/3331545.3342595}, doi = {10.1145/3331545.3342595}, abstract = {For over two decades, monad transformers have been the main modular approach for expressing purely functional side-effects in Haskell. Yet, in recent years algebraic effects have emerged as an alternative whose popularity is growing. While the two approaches have been well-studied, there is still confusion about their relative merits and expressiveness, especially when it comes to their comparative modularity. This paper clarifies the connection between the two approaches—some of which is folklore—and spells out consequences that we believe should be better known. We characterise a class of algebraic effects that is modular, and show how these correspond to a specific class of monad transformers. In particular, we show that our modular algebraic effects gives rise to monad transformers. Moreover, every monad transformer for algebraic operations gives rise to a modular effect handler.}, booktitle = {Proceedings of the 12th ACM SIGPLAN International Symposium on Haskell}, pages = {98–113}, numpages = {16}, keywords = {Effects, Monads, Handlers, Transformers}, location = {Berlin, Germany}, series = {Haskell 2019} }


 @article{fish20,  author={ Fish, Jennifer and Melicher, Darya and Aldrich, Jonathan}, title ={A Case Study in Language-Based Security: Building an I/O Library for Wyvern}, year={2020}, booktitle={In Onward! 2020}, pages={14}}
 
@article{brachthauser20, title={Effekt: Capability-passing style for type- and effect-safe, extensible effect handlers in Scala}, volume={30}, DOI={10.1017/S0956796820000027}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={BRACHTHÄUSER, JONATHAN IMMANUEL and SCHUSTER, PHILIPP and OSTERMANN, KLAUS}, year={2020}, pages={e8}}


@article{plotkin02,
author = {Plotkin, Gordon and Power, John},
year = {2003},
month = {02},
pages = {69-94},
title = {Algebraic Operations and Generic Effects},
volume = {11},
journal = {Applied Categorical Structures},
doi = {10.1023/A:1023064908962}
}

@inproceedings{amin14,
author = {Amin, Nada and Rompf, Tiark and Odersky, Martin},
title = {Foundations of Path-Dependent Types},
year = {2014},
isbn = {9781450325851},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2660193.2660216},
doi = {10.1145/2660193.2660216},
booktitle = {Proceedings of the 2014 ACM International Conference on Object Oriented Programming Systems Languages and Applications},
pages = {233–249},
numpages = {17},
keywords = {calculus, objects, dependent types},
location = {Portland, Oregon, USA},
series = {OOPSLA ’14}
}


@inproceedings{leijen14,
author = {Leijen, Daan},
title = {{Koka: Programming with Row Polymorphic Effect Types}},
booktitle = {Mathematically Structured Functional Programming},
year = {2014},
url = {https://www.microsoft.com/en-us/research/publication/koka-programming-with-row-polymorphic-effect-types-2/},
address = {},
pages = {},
journal = {},
volume = {},
chapter = {},
isbn = {},
}

@techreport{leijen18,
author = {Leijen, Daan},
title = {Algebraic Effect Handlers with Resources and Deep Finalization},
year = {2018},
month = {April},
abstract = {Algebraic effect handlers are a powerful abstraction mechanism that can express many complex control-flow mechanisms. In this article we first define a basic operational semantics and type system for algebraic effect handlers, and then build on that to formalize various optimizations and extensions. In particular, we show how to optimize tail-resumptive operations using skip frames, formalize a semantics and type rules for first-class resource handlers that can express polymorphic references, and formalize a design for finalizers and initializers to handle external resources with linearity constraints. We introduce the concept of deep finalization which ensures finalization is robust across operation handlers even if operations themselves do not resume.},
url = {https://www.microsoft.com/en-us/research/publication/algebraic-effect-handlers-resources-deep-finalization/},
pages = {35},
number = {MSR-TR-2018-10},
}

@inproceedings{lindley17,
 author = {Lindley, Sam and McBride, Conor and McLaughlin, Craig},
 title = {{Do Be Do Be Do}},
 booktitle = {Symposium on Principles of Programming Languages},
 year = {2017},
 isbn = {978-1-4503-4660-3},
 location = {Paris, France},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/3009837.3009897},
 doi = {10.1145/3009837.3009897},
 acmid = {3009897},
}

@inproceedings{brady13,
 author = {Brady, Edwin},
 title = {{Programming and Reasoning with Algebraic Effects and Dependent Types}},
 booktitle = {International Conference on Functional Programming},
 year = {2013},
 isbn = {978-1-4503-2326-0},
 location = {Boston, Massachusetts, USA},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2500365.2500581},
 doi = {10.1145/2500365.2500581},
 acmid = {2500581},
}

@article{bauer15,
title = {{Programming with Algebraic Effects and Handlers}},
journal = "Journal of Logical and Algebraic Methods in Programming",
volume = "84",
number = "1",
pages = "108 - 123",
year = "2015",
issn = "2352-2208",
doi = "http://dx.doi.org/10.1016/j.jlamp.2014.02.001",
url = "http://www.sciencedirect.com/science/article/pii/S2352220814000194",
author = "Andrej Bauer and Matija Pretnar",
}

@inproceedings{bocchino09,
 author = {Bocchino,Jr., Robert L. and Adve, Vikram S. and Dig, Danny and Adve, Sarita V. and Heumann, Stephen and Komuravelli, Rakesh and Overbey, Jeffrey and Simmons, Patrick and Sung, Hyojin and Vakilian, Mohsen},
 title = {{A Type and Effect System for Deterministic Parallel Java}},
 booktitle = {Object Oriented Programming Systems Languages and Applications},
 year = {2009},
 isbn = {978-1-60558-766-0},
 location = {Orlando, Florida, USA},
 numpages = {20},
 url = {http://doi.acm.org/10.1145/1640089.1640097},
 doi = {10.1145/1640089.1640097},
 acmid = {1640097},
}

@inproceedings{banados-schwerter14,
 author = {Ba\~{n}ados Schwerter, Felipe and Garcia, Ronald and Tanter, \'{E}ric},
 title = {{A Theory of Gradual Effect Systems}},
 booktitle = {International Conference on Functional Programming},
 year = {2014},
 isbn = {978-1-4503-2873-9},
 location = {Gothenburg, Sweden},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2628136.2628149},
 doi = {10.1145/2628136.2628149},
 acmid = {2628149},
 keywords = {abstract interpretation, gradual typing, type-and-effect systems},
}

@inproceedings{nielson99,
 author = {Nielson, Flemming and Nielson, Hanne Riis},
 title = {{Type and Effect Systems}},
 booktitle = {Correct System Design, Recent Insight and Advances, (to Hans Langmaack on the Occasion of His Retirement from His Professorship at the University of Kiel)},
 year = {1999},
 isbn = {3-540-66624-9},
 numpages = {23},
 url = {http://dl.acm.org/citation.cfm?id=646005.673740},
 acmid = {673740},
}

@inproceedings{rytz12,
 author = {Rytz, Lukas and Odersky, Martin and Haller, Philipp},
 title = {{Lightweight Polymorphic Effects}},
 booktitle = {European Conference on Object-Oriented Programming},
 year = {2012},
 isbn = {978-3-642-31056-0},
 location = {Beijing, China},
 numpages = {25},
 url = {http://dx.doi.org/10.1007/978-3-642-31057-7_13},
 doi = {10.1007/978-3-642-31057-7_13},
 acmid = {2367182},
}

@article{talpin94,
 author = {Talpin, Jean-Pierre and Jouvelot, Pierre},
 title = {{The Type and Effect Discipline}},
 journal = {Information and Computation},
 issue_date = {June 1994},
 volume = {111},
 number = {2},
 year = {1994},
 issn = {0890-5401},
 pages = {245--296},
 numpages = {52},
 url = {http://dx.doi.org/10.1006/inco.1994.1046},
 doi = {10.1006/inco.1994.1046},
 acmid = {184660},
 publisher = {Academic Press, Inc.},
 address = {Duluth, MN, USA},
}

@inbook{kiniry06,
 author = {Kiniry, Joseph R.},
 chapter = {{Exceptions in Java and Eiffel: Two Extremes in Exception Design and Application}},
 title = {{Advanced Topics in Exception Handling Techniques}},
 year = {2006},
 isbn = {3-540-37443-4, 978-3-540-37443-5},
 numpages = {13},
 url = {http://dl.acm.org/citation.cfm?id=2124243.2124264},
 acmid = {2124264},
 publisher = {Springer-Verlag},
}

@inproceedings{DBLP:conf/ecoop/LongLR15,
  author    = {Yuheng Long and
               Yu David Liu and
               Hridesh Rajan},
  editor    = {John Tang Boyland},
  title     = {Intensional Effect Polymorphism},
  booktitle = {29th European Conference on Object-Oriented Programming, {ECOOP} 2015,
               July 5-10, 2015, Prague, Czech Republic},
  series    = {LIPIcs},
  volume    = {37},
  pages     = {346--370},
  publisher = {Schloss Dagstuhl - Leibniz-Zentrum f{\"{u}}r Informatik},
  year      = {2015},
  url       = {https://doi.org/10.4230/LIPIcs.ECOOP.2015.346},
  doi       = {10.4230/LIPIcs.ECOOP.2015.346},
  timestamp = {Tue, 11 Feb 2020 15:52:14 +0100},
  biburl    = {https://dblp.org/rec/conf/ecoop/LongLR15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{10.5555/645393.651891,
author = {Trifonov, Valery and Shao, Zhong},
title = {Safe and Principled Language Interoperation},
year = {1999},
booktitle = {European Symposium on Programming Languages and Systems},
}
 

@inproceedings{lucassen88,
 author = {Lucassen, John M. and Gifford, David K.},
 title = {{Polymorphic Effect Systems}},
 booktitle = {Symposium on Principles of Programming Languages},
 year = {1988},
 isbn = {0-89791-252-7},
 location = {San Diego, California, USA},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/73560.73564},
 doi = {10.1145/73560.73564},
 acmid = {73564},
}

@inproceedings{tang95,
 author = {Tang, Yan Mei and Jouvelot, Pierre},
 title = {{Effect Systems with Subtyping}},
 booktitle = {Symposium on Partial Evaluation and Semantics-based Program Manipulation},
 year = {1995},
 isbn = {0-89791-720-0},
 location = {La Jolla, California, USA},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/215465.215552},
 doi = {10.1145/215465.215552},
 acmid = {215552},
}

@inproceedings{jouvelot91,
 author = {Jouvelot, Pierre and Gifford, David},
 title = {{Algebraic Reconstruction of Types and Effects}},
 booktitle = {Symposium on Principles of Programming Languages},
 year = {1991},
 isbn = {0-89791-419-8},
 location = {Orlando, Florida, USA},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/99583.99623},
 doi = {10.1145/99583.99623},
 acmid = {99623},
}

@inproceedings{tang94,
 author = {Tang, Yan Mei and Jouvelot, Pierre},
 title = {{Separate Abstract Interpretation for Control-Flow Analysis}},
 booktitle = {International Conference on Theoretical Aspects of Computer Software},
 year = {1994},
 isbn = {3-540-57887-0},
 numpages = {20},
 url = {http://dl.acm.org/citation.cfm?id=645868.668505},
 acmid = {668505},
}

@article{talpin92,
title={{Polymorphic Type, Region and Effect Inference}},
volume={2},
DOI={10.1017/S0956796800000393},
number={3},
journal={Journal of Functional Programming},
publisher={Cambridge University Press},
author={Talpin, Jean-Pierre and Jouvelot, Pierre},
year={1992},
pages={245--271}
}

@inproceedings{tang92,
 author = {Tang, Yan Mei and Jouvelot, Pierre},
 title = {{Control-Flow Effects for Escape Analysis}},
 booktitle = {Workshop on Static Analysis},
 year = {1992},
 location = {Bordeaux, France},
}

@inproceedings{brachthauser17,
 author = {Brachth\"{a}user, Jonathan Immanuel and Schuster, Philipp},
 title = {{Effekt: Extensible Algebraic Effects in Scala (Short Paper)}},
 booktitle = {International Symposium on Scala},
 year = {2017},
 isbn = {978-1-4503-5529-2},
 location = {Vancouver, BC, Canada},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/3136000.3136007},
 doi = {10.1145/3136000.3136007},
 acmid = {3136007},
}

@misc{loh17,
title= {{Specifying Attenuation}},
author = {Shu-Peng Loh and Sophia Drossopoulou},
year = {2017},
howpublished= {\url{https://2017.splashcon.org/event/ocap-2017-specifying-attenuation}},
}

@article{brachthauser18,
 author = {Brachth\"{a}user, Jonathan Immanuel and Schuster, Philipp and Ostermann, Klaus},
 title = {{Effect Handlers for the Masses}},
 journal = {Programming Languages},
 issue_date = {November 2018},
 volume = {2},
 number = {OOPSLA},
 year = {2018},
 issn = {2475-1421},
 pages = {111:1--111:27},
 articleno = {111},
 numpages = {27},
 url = {http://doi.acm.org/10.1145/3276481},
 doi = {10.1145/3276481},
 acmid = {3276481},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{craig18,
author="Craig, Aaron and Potanin, Alex and Groves, Lindsay and Aldrich, Jonathan",
title={{Capabilities: Effects for Free}},
booktitle="Formal Methods and Software Engineering",
year="2018",
isbn="978-3-030-02450-5"
}

@inproceedings{dimoulas14,
  author = 	 {Christos Dimoulas and Scott Moore and Aslan Askarov and Stephen Chong},
  title = 	 {{Declarative Policies for Capability Control}},
  booktitle =	 { Computer Security Foundations Symposium},
  year = 	 2014,
}

@inproceedings{maffeis10,
 author = {Maffeis, Sergio and Mitchell, John C. and Taly, Ankur},
 title = {{Object Capabilities and Isolation of Untrusted Web Applications}},
 booktitle = {IEEE Symposium on Security and Privacy},
 year = {2010},
 numpages = {16},
 acmid = {1849970},
}

@inproceedings{mettler10,
  author    = {Adrian Mettler and David Wagner and Tyler Close},
  title     = {{Joe-E: {A} Security-Oriented Subset of Java}},
  booktitle = {Network and Distributed System Security Symposium},
  year      = {2010}
}

@inproceedings {moore14,
author = {Scott Moore and Christos Dimoulas and Dan King and Stephen Chong},
title = {{SHILL: A Secure Shell Scripting Language}},
booktitle = {USENIX Symposium on Operating Systems Design and Implementation},
year = {2014},
}

@inproceedings{drossopoulou15swapsies,
 author = {Drossopoulou, Sophia and Noble, James and Miller, Mark S.},
 title = {{Swapsies on the Internet: First Steps Towards Reasoning About Risk and Trust in an Open World}},
 booktitle = {Workshop on Programming Languages and Analysis for Security},
 year = {2015},
 location = {Prague, Czech Republic},
 numpages = {14},
 acmid = {2786564},
} 

@inproceedings{drossopoulou14how,
year={2014},
booktitle={Integrated Formal Methods},
title={{How to Break the Bank: Semantics of Capability Policies}},
author={Drossopoulou, Sophia and Noble, James},
language={English}
}

@inproceedings{noble14,
 author = {Noble, James and Drossopoulou, Sophia},
 title = {{Rationally Reconstructing the Escrow Example}},
 booktitle = {Workshop on Formal Techniques for Java-like Programs},
 year = {2014},
 location = {Uppsala, Sweden},
 articleno = {5},
 numpages = {6},
 acmid = {2635850},
} 

@inproceedings{miller14,
year={2014},
booktitle={European Conference on Object-Oriented Programming},
title={{Spores: A Type-Based Foundation for Closures in the Age of Concurrency and Distribution}},
author={Miller, Heather and Haller, Philipp and Odersky, Martin},
language={English}
}

@inproceedings{nistor13,
    author = {Nistor, Ligia and Kurilova, Darya and Balzer, Stephanie and Chung, Benjamin and Potanin, Alex and Aldrich, Jonathan},
    title = {{Wyvern: A Simple, Typed, and Pure Object-Oriented Language}},
    booktitle = {Workshop on Mechanisms for Specialization, Generalization and Inheritance},
    year = {2013},
    location = {Montpellier, France},
    numpages = {8},
    acmid = {2489830},
}

@inproceedings{bracha10,
year={2010},
booktitle={European Conference on Object-Oriented Programming},
title={{Modules as Objects in Newspeak}},
author={Bracha, Gilad and von der Ah\'e, Peter and Bykov, Vassili and Kashai, Yaron and Maddox, William and Miranda, Eliot},
language={English}
}

@inproceedings{drossopoulou13,
 author = {Drossopoulou, Sophia and Noble, James},
 title = {{The Need for Capability Policies}},
 booktitle = {Workshop on Formal Techniques for Java-like Programs},
 year = {2013},
 location = {Montpellier, France},
 articleno = {6},
 numpages = {7},
 acmid = {2489811},
}

@inproceedings{coker15,
 author = {Zack Coker and Michael Maass and Tianyuan Ding and Claire {Le Goues} and Joshua Sunshine},
 title = {{Evaluating the Flexibility of the Java Sandbox}},
 booktitle = {Annual Computer Security Applications Conference},
 year = {2015}, 
} 

@article{saltzer74,
 author = {Saltzer, Jerome H.},
 title = {{Protection and the Control of Information Sharing in Multics}},
 journal = {Communications of the ACM},
 issue_date = {1974},
 volume = {17},
 number = {7},
 year = {1974},
 pages = {388--402},
 numpages = {15},
 acmid = {361067},
 publisher = {ACM},
 address = {New York, NY, USA}
} 

@article{dennis66,
 author = {Dennis, Jack B. and Van Horn, Earl C.},
 title = {{Programming Semantics for Multiprogrammed Computations}},
 journal = {Communications of the ACM},
 issue_date = {March 1966},
 volume = {9},
 number = {3},
 year = {1966},
 pages = {143--155},
 numpages = {13},
 acmid = {365252},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@phdthesis{miller06,
 author = {Mark S. Miller},
 school = {Johns Hopkins University},
 title = {{Robust Composition: Towards a Unified Approach to Access Control and Concurrency Control}},
 year = {2006}
}

@inproceedings{flatt98,
 author = {Matthew Flatt and Matthias Felleisen},
 title = "{Units: Cool Modules for HOT Languages}",
 booktitle = "Programming Language Design and Implementation",
 year = {1998},
 location = {Montreal, Canada}
}

@techreport{drossopoulou14towards,
  author={Sophia Drossopoulou and James Noble},
  title={{Towards Capability Policy Specification and Verification}},
  year={2014},
  institution = {Victoria University of Wellington}
}

@techreport{drossopoulou15reasoning,
title = {{Reasoning about Risk and Trust in an Open World}},
author  = {Sophia Drossopoulou and James Noble and Toby Murray and Mark S. Miller},
year  = 2015,
institution = {Victoria University of Wellington}
}

@misc{elang,
title = {{The E Language}},
author = {Mark S. Miller},
howpublished = {\url{http://erights.org/elang/}}
}

@article{wulf74,
 author = {Wulf, William A. and Cohen, Ellis S. and Corwin, William M. and Jones, Anita K. and Levin, Roy and Pierson, C. and Pollack, Fred J.},
 title = {{HYDRA: The Kernel of a Multiprocessor Operating System}},
 journal = {Communications of the ACM},
 issue_date = {June 1974},
 volume = {17},
 number = {6},
 year = {1974},
 pages = {337--345},
 numpages = {9},
 acmid = {364017},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{morris73,
 author = {Morris,Jr., James H.},
 title = {{Protection in Programming Languages}},
 journal = {Communications of the ACM},
 issue_date = {Jan. 1973},
 volume = {16},
 number = {1},
 year = {1973},
 pages = {15--21},
 numpages = {7},
 acmid = {361937},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@misc{caja,
title = {Caja},
author = {{Google, Inc.}},
howpublished = {\url{https://code.google.com/p/google-caja/}}
}

@techreport{miller08,
  title={{Caja: Safe Active Content in Sanitized JavaScript}},
  author={Miller, Mark S. and Samuel, Mike and Laurie, Ben and Awad, Ihab and Stay, Mike},
  year={2008},
  institution={Google, Inc.},
}

@inproceedings{stiegler07, 
author={Stiegler, Marc}, 
booktitle={International Conference on Creating, Connecting and Collaborating through Computing}, 
title={{Emily: A High Performance Language for Enabling Secure Cooperation}}, 
year={2007},
}

@inproceedings{spiessens05,
year={2005},
booktitle={Multiparadigm Programming in Mozart/Oz},
title={{The Oz-E Project: Design Guidelines for a Secure Multiparadigm Programming Language}},
author={Spiessens, Fred and Van Roy, Peter},
language={English}
}

@techreport{rees96,
 author = {Rees, Jonathan A.},
 title = {{A Security Kernel Based on the Lambda-Calculus}},
 year = {1996},
 institution = {Massachusetts Institute of Technology},
}

@inproceedings{laurie07,
year={2007},
booktitle={Security Protocols},
title={{Safer Scripting Through Precompilation}},
author={Laurie, Ben},
language={English}
}

@article {vancutsem14,
	title = {{AmbientTalk: Programming Responsive Mobile Peer-to-peer Applications with Actors}},
	journal = {Computer Languages, Systems and Structures},
	year = {2014},
	publisher = {Elsevier},
	volume = "40",
	number = "3–4",
	pages = "112-136",
	author = {Van Cutsem, Tom and Gonzalez Boix, Elisa and Scholliers, Christophe and Lombide Carreton, Andoni and Harnie, Dries and Pinte, Kevin and De Meuter, Wolfgang},
	editor = {Nick Benton},
}

@inproceedings{macqueen84,
 author = {MacQueen, David},
 title = {{Modules for Standard ML}},
 booktitle = {ACM Symposium on LISP and Functional Programming},
 year = {1984},
 location = {Austin, Texas, USA},
 numpages = {10},
 acmid = {802036},
}

@inproceedings{devriese16,
 author = {Devriese, Dominique and Piessens, Frank and Birkedal, Lars},
 title = {{Reasoning about Object Capabilities with Logical Relations and Effect Parametricity}},
 booktitle = {European Symposium on Security and Privacy},
 year = {2016},
}

@phdthesis{maass16,
 author = {Michael Maass},
 school = {Carnegie Mellon University},
 title = {{A Theory and Tools for Applying Sandboxes Effectively}},
 year = {2016}
}

@inproceedings{kurilova16,
    author = {Kurilova, Darya and Potanin, Alex and Aldrich, Jonathan},
    title = {{Modules in Wyvern: Advanced Control over Security and Privacy}},
    booktitle = {{Symposium and Bootcamp on the Science of Security}},
    year = {2016},
    location = {Raleigh, North Carolina},
    articleno = {18},
    numpages = {2},
    acmid = {2600194},
} 

@article{ter-louw08,
  title={{Analysis of Hypertext Isolation Techniques for XSS Prevention}},
  author={Ter Louw, Mike and Bisht, Prithvi and Venkatakrishnan, V},
  journal={Web 2.0 Security and Privacy},
  year={2008}
}

@inproceedings{wang16,
 author = {Esther Wang and Jonathan Aldrich},
 title = {{Capability Safe Reflection for the Wyvern Language}},
 booktitle = {Workshop on Meta-Programming Techniques and Reflection},
 year = {2016},
}

@inproceedings{chen07,
 author = {Chen, Shuo and Ross, David and Wang, Yi-Min},
 title = {{An Analysis of Browser Domain-isolation Bugs and a Light-weight Transparent Defense Mechanism}},
 booktitle = {Conference on Computer and Communications Security},
 year = {2007},
 isbn = {978-1-59593-703-2},
 location = {Alexandria, Virginia, USA},
 numpages = {10},
 acmid = {1315248},
}

@inproceedings{watson07,
 author = {Watson, Robert N. M.},
 title = {{Exploiting Concurrency Vulnerabilities in System Call Wrappers}},
 booktitle = {USENIX Workshop on Offensive Technologies},
 year = {2007},
 articleno = {2},
 numpages = {8},
 acmid = {1323278},
}


@misc{odersky16,
title={{Scala Language Specification}},
author={Martin Odersky and Philippe Altherr and Vincent Cremet and Gilles
Dubochet and Burak Emir and Philipp Haller and St\'{e}phane Micheloud and Nikolay
Mihaylov and Adriaan Moors and Lukas Rytz and Michel Schinz and Erik Stenman
and Matthias Zenger},
howpublished={\url{http://scala-lang.org/files/archive/spec/2.11/}},
note={{Last accessed: May 2017}},
}

  
@article{odersky05,
author = {Odersky, Martin and Zenger, Matthias},
title = {Scalable Component Abstractions},
year = {2005},
issue_date = {October 2005},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {10},
issn = {0362-1340},
url = {https://doi.org/10.1145/1103845.1094815},
doi = {10.1145/1103845.1094815},
journal = {SIGPLAN Not.},
month = oct,
pages = {41–57},
numpages = {17},
keywords = {Scala, abstract types, mixins, classes, components},
}
  

@misc{wagner02,
title={{A Security Analysis of the Combex DarpaBrowser Architecture}},
author={David Wagner and Dean Tribble},
howpublished={\url{http://combex.com/papers/darpa-review/security-review.pdf}},
month=mar,
year=2002,
}

@article{schreuders13,
 author = {Schreuders, Z. Cliffe and Mcgill, Tanya and Payne, Christian},
 title = {{The State of the Art of Application Restrictions and Sandboxes: A Survey of Application-oriented Access Controls and Their Shortfalls}},
 journal = {Computers and Security},
 issue_date = {February, 2013},
 volume = {32},
 year = {2013},
 issn = {0167-4048},
 pages = {219--241},
 numpages = {23},
 acmid = {2622916},
 publisher = {Elsevier Advanced Technology Publications},
 address = {Oxford, UK, UK},
}

@inproceedings{boyland01,
 author = {Boyland, John and Noble, James and Retert, William},
 title = {{Capabilities for Sharing: A Generalisation of Uniqueness and Read-Only}},
 booktitle = {European Conference on Object-Oriented Programming},
 year = {2001},
 isbn = {3-540-42206-4},
 numpages = {26},
 acmid = {680004},
}

@inproceedings{rushby81,
 author = {Rushby, John M.},
 title = {{Design and Verification of Secure Systems}},
 booktitle = {Symposium on Operating Systems Principles},
 year = {1981},
 isbn = {0-89791-062-1},
 location = {Pacific Grove, California, USA},
 numpages = {10},
 acmid = {806586},
}

@techreport{melicher17tr,
author = {Darya Melicher and Yangqingwei Shi and Alex Potanin and Jonathan Aldrich},
title = {{A Capability-Based Module System for Authority Control}},
number = {CMU-ISR-17-106},
institution = {Carnegie Mellon University},
year = {2017},
url = {http://reports-archive.adm.cs.cmu.edu/anon/isr2017/abstracts/17-106.html}
}

@inproceedings{homer13,
 author = {Homer, Michael and Bruce, Kim B. and Noble, James and Black, Andrew P.},
 title = {{Modules As Gradually-typed Objects}},
 booktitle = {Workshop on Dynamic Languages and Applications},
 year = {2013},
}

@inproceedings{drossopoulou16,
 author = {Drossopoulou, Sophia and Noble, James and Miller, Mark S. and Murray, Toby},
 title = {{Permission and Authority Revisited Towards a Formalisation}},
 booktitle = {Workshop on Formal Techniques for Java-like Programs},
 year = {2016},
 isbn = {978-1-4503-4439-5},
 location = {Rome, Italy},
} 

@inproceedings{hayes17,
author="Hayes, Ian J. and Wu, Xi and Meinicke, Larissa A.",
title={{Capabilities for Java: Secure Access to Resources}},
bookTitle="Asian Symposium on Programming Languages and Systems",
year="2017",
isbn="978-3-319-71237-6",
doi="10.1007/978-3-319-71237-6_4",
url="https://doi.org/10.1007/978-3-319-71237-6_4"
}

@misc{montelang,
title = {{The Monte Programming Language}},
howpublished = {\url{http://monte.readthedocs.io}}
}

@misc{persvr,
title = {{The Persevere 2.0 Project, GitHub repositories}},
howpublished = {\url{https://github.com/persvr}}
}

@misc{perstore,
title = {{Perstore, GitHub repository}},
howpublished = {\url{https://github.com/persvr/perstore}}
}

@misc{persevere-example-wiki,
title = {{Example wiki built with Persevere 2.0, GitHub repository}},
howpublished = {\url{https://github.com/persvr/persevere-example-wiki}}
}

@misc{pintura,
title = {{Pintura, GitHub repository}},
howpublished = {\url{https://github.com/persvr/pintura}}
}

@misc{stefan11,
 title        = {{Analysing Object-Capability Patterns With Mur$\phi$}},
 author       = {Deian Stefan and John C. Mitchell},
 howpublished = {\url{http://www.scs.stanford.edu/~deian/pubs/stefan:2011:ocap.pdf}},
 month        = {April},
 year         = {2011},
}

@inproceedings{murray08,
 author = {Toby Murray},
 title = {{Analysing Object-Capability Security}},
 booktitle = {Joint Workshop on Foundations of Computer Security, Automated Reasoning for Security Protocol Analysis and Issues in the Theory
of Security},
 year = {2008},
} 

@inproceedings{zhang16,
 author = {Zhang, Yizhou and Salvaneschi, Guido and Beightol, Quinn and Liskov, Barbara and Myers, Andrew C.},
 title = {{Accepting Blame for Safe Tunneled Exceptions}},
 booktitle = {Conference on Programming Language Design and Implementation},
 year = {2016},
 isbn = {978-1-4503-4261-2},
 location = {Santa Barbara, CA, USA},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/2908080.2908086},
 doi = {10.1145/2908080.2908086},
 acmid = {2908086},
 keywords = {Exception tunneling, Genus, exception handling},
}

@article{plotkin03,
author="Plotkin, Gordon and Power, John",
title={{Algebraic Operations and Generic Effects}},
journal="Applied Categorical Structures",
day="01",
volume="11",
number="1",
pages="69--94",
year="2003",
issn="1572-9095",
doi="10.1023/A:1023064908962",
url="https://doi.org/10.1023/A:1023064908962"
}

@inproceedings{plotkin09,
author="Plotkin, Gordon and Pretnar, Matija",
title={{Handlers of Algebraic Effects}},
booktitle="Programming Languages and Systems",
year="2009",
isbn="978-3-642-00590-9"
}

@misc{azouri18,
title= {{Abusing Text Editors with Third-party Plugins}},
author = {Dor Azouri},
year = {2018},
howpublished= {\url{https://go.safebreach.com/rs/535-IXZ-934/images/Abusing_Text_Editors.pdf}},
}

@article{parnas72,
 author = {Parnas, David L.},
 title = {{On the Criteria to Be Used in Decomposing Systems into Modules}},
 journal = {Communications of the ACM},
 issue_date = {Dec. 1972},
 volume = {15},
 number = {12},
 year = {1972},
 issn = {0001-0782},
 pages = {1053--1058},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/361598.361623},
 doi = {10.1145/361598.361623},
 acmid = {361623},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{parnas71,
author = {Parnas, David L.},
year = {1971},
month = {01},
pages = {339-344},
title = {{Information Distribution Aspects of Design Methodology}},
volume = {71},
journal = {IFIPS Congress}
}

@article{zhang19,
 author = {Zhang, Yizhou and Myers, Andrew C.},
 title = {{Abstraction-safe Effect Handlers via Tunneling}},
 journal = {Proceedings of the ACM on Programming Languages},
 issue_date = {January 2019},
 volume = {3},
 number = {POPL},
 year = {2019},
 issn = {2475-1421},
 pages = {5:1--5:29},
 articleno = {5},
 numpages = {29},
 url = {http://doi.acm.org/10.1145/3290318},
 doi = {10.1145/3290318},
 acmid = {3290318},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Algebraic effects, dynamic scoping, exceptions, parametricity, type systems},
}

@inproceedings{marino09,
 author = {Marino, Daniel and Millstein, Todd},
 title = {{A Generic Type-and-effect System}},
 booktitle = {International Workshop on Types in Language Design and Implementation},
 year = {2009},
 isbn = {978-1-60558-420-1},
 location = {Savannah, GA, USA},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1481861.1481868},
 doi = {10.1145/1481861.1481868},
 acmid = {1481868},
}

@article{bracevac18,
 author = {Bra\v{c}evac, Oliver and Amin, Nada and Salvaneschi, Guido and Erdweg, Sebastian and Eugster, Patrick and Mezini, Mira},
 title = {{Versatile Event Correlation with Algebraic Effects}},
 journal = {Proceedings of the ACM on Programming Languages},
 issue_date = {September 2018},
 volume = {2},
 number = {ICFP},
 year = {2018},
 issn = {2475-1421},
 pages = {67:1--67:31},
 articleno = {67},
 numpages = {31},
 url = {http://doi.acm.org/10.1145/3236762},
 doi = {10.1145/3236762},
 acmid = {3236762},
}

@book{turbak08,
 author = {Turbak, Franklyn A. and Gifford, David K.},
 title = {{Design Concepts in Programming Languages}},
 year = {2008},
 isbn = {0262201755, 9780262201759},
 publisher = {The MIT Press},
}

@inproceedings{dolan17,
  author    = {Stephen Dolan and Spiros Eliopoulos and Daniel Hillerstr{\"{o}}m and Anil Madhavapeddy and K. C. Sivaramakrishnan and Leo White},
  title     = {{Concurrent System Programming with Effect Handlers}},
  booktitle = {Trends in Functional Programming},
  year      = {2017},
  url       = {https://doi.org/10.1007/978-3-319-89719-6\_6},
  doi       = {10.1007/978-3-319-89719-6\_6},
  timestamp = {Sat, 05 May 2018 23:05:34 +0200},
}

@misc{wyvern-manifesto,
title= {{Wyvern: A Language for Usable Design-Driven Assurance}},
year = {2018},
howpublished= {\url{https://github.com/wyvernlang/wyvern/wiki/Wyvern\%3A-A-Language-for-Usable-Design-Driven-Assurance}},
}

@phdthesis{lucassen87,
 author = {Lucassen, John M.},
 school = {Massachusetts Institute of Technology},
 title = {{Types and Effects towards the Integration of Functional and Imperative Programming}},
 year = {1987}
}

@inproceedings{biernacki19,
  author    = {Dariusz Biernacki and Maciej Pir\`{o}g and Piotr Polesiuk and Filip Sieczkowski},
  title     = {{Abstracting Algebraic Effects}},
  booktitle = {Symposium on Principles of Programming Languages},
  year      = {2019},
}

@article{denning76,
 author = {Denning, Peter J.},
 title = {{Fault Tolerant Operating Systems}},
 journal = {ACM Comput. Surv.},
 issue_date = {Dec. 1976},
 volume = {8},
 number = {4},
 month = dec,
 year = {1976},
 issn = {0360-0300},
 pages = {359--389},
 numpages = {31},
 url = {http://doi.acm.org/10.1145/356678.356680},
 doi = {10.1145/356678.356680},
 acmid = {356680},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{leino02,
 author = {Leino, K. Rustan M. and Poetzsch-Heffter, Arnd and Zhou, Yunhong},
 title = {{Using Data Groups to Specify and Check Side Effects}},
 booktitle = {Conference on Programming Language Design and Implementation},
 year = {2002},
 isbn = {1-58113-463-0},
 location = {Berlin, Germany},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/512529.512559},
 doi = {10.1145/512529.512559},
 acmid = {512559},
}

@inproceedings{lubin18,
author={Justin Lubin},
booktitle={SPLASH 2018 Student Research Competition},
title={{Approximating Polymorphic Effects with Capabilities}},
year={2018},
volume={},
number={},
}

@inproceedings{melicher17,
 author = {Darya Melicher and Yangqingwei Shi and Alex Potanin and Jonathan Aldrich},
 title = {{A Capability-Based Module System for Authority Control}},
 booktitle = {European Conference on Object-Oriented Programming},
 year = {2017},
}

@InProceedings{gordon13,
author="Gordon, Colin S.
and Dietl, Werner
and Ernst, Michael D.
and Grossman, Dan",
editor="Castagna, Giuseppe",
title="JavaUI: Effects for Controlling UI Object Access",
booktitle="ECOOP 2013 -- Object-Oriented Programming",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="179--204",
abstract="Most graphical user interface (GUI) libraries forbid accessing UI elements from threads other than the UI event loop thread. Violating this requirement leads to a program crash or an inconsistent UI. Unfortunately, such errors are all too common in GUI programs.",
isbn="978-3-642-39038-8"
}

@inproceedings{10.1145/2951913.2951939,
author = {Gaboardi, Marco and Katsumata, Shin-ya and Orchard, Dominic and Breuvart, Flavien and Uustalu, Tarmo},
title = {Combining Effects and Coeffects via Grading},
year = {2016},
url = {https://doi.org/10.1145/2951913.2951939},
doi = {10.1145/2951913.2951939},
booktitle = {International Conference on Functional Programming},
}

@inproceedings{10.1145/2628136.2628160,
author = {Petricek, Tomas and Orchard, Dominic and Mycroft, Alan},
title = {Coeffects: A Calculus of Context-Dependent Computation},
year = {2014},
url = {https://doi.org/10.1145/2628136.2628160},
doi = {10.1145/2628136.2628160},
booktitle = {International Conference on Functional Programming},
}


@inproceedings{grennhouse99,
author = {Greenhouse, Aaron and Boyland, John},
year = {1999},
month = {06},
pages = {205-229},
title = {An Object-Oriented Effects System},
doi = {10.1007/3-540-48743-3_10}
}

@inproceedings{10.1145/1094811.1094847,
author = {van Dooren, Marko and Steegmans, Eric},
title = {Combining the Robustness of Checked Exceptions with the Flexibility of Unchecked Exceptions Using Anchored Exception Declarations},
year = {2005},
url = {https://doi.org/10.1145/1094811.1094847},
doi = {10.1145/1094811.1094847},
booktitle = {Proc. Object-Oriented Programming, Systems, Languages, and Applications},
}

@article{10.1145/44501.45065,
author = {Mitchell, John C. and Plotkin, Gordon D.},
title = {Abstract Types Have Existential Type},
year = {1988},
issue_date = {July 1988},
volume = {10},
number = {3},
url = {https://doi.org/10.1145/44501.45065},
doi = {10.1145/44501.45065},
journal = {ACM Trans. Program. Lang. Syst.},
month = jul,
pages = {470–502},
}
  

  
@article{10.1145/1103845.1094847,
author = {van Dooren, Marko and Steegmans, Eric},
title = {Combining the Robustness of Checked Exceptions with the Flexibility of Unchecked Exceptions Using Anchored Exception Declarations},
year = {2005},
issue_date = {October 2005},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {10},
issn = {0362-1340},
url = {https://doi.org/10.1145/1103845.1094847},
doi = {10.1145/1103845.1094847},
journal = {SIGPLAN Not.},
month = oct,
pages = {455–471},
numpages = {17},
keywords = {Cappuccino, exception handling, anchored exception declaration}
}

@phdthesis{melicher20thesis,
    author = {Darya Melicher}, 
    title = {{Controlling Module Authority Using Programming Language Design}},
    school = {{Carnegie Mellon University}},
    year = 2020
}

@inproceedings{filinski10,
author = {Filinski, Andrzej},
title = {{Monads in Action}},
year = {2010},
isbn = {9781605584799},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1706299.1706354},
doi = {10.1145/1706299.1706354},
booktitle = {Proceedings of the 37th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {483--494},
numpages = {12},
keywords = {modular semantics, computational effects, monads},
location = {Madrid, Spain},
series = {POPL '10}
}